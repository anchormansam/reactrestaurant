{"version":3,"sources":["Components/Jumbotron.js","Components/Container.js","Components/Tile.js","Components/ApiCall.js","Components/Carousel.js","Components/Accordion.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","props","showModal","setState","show","hideModal","state","bind","Fragment","className","id","onClick","this","role","React","Component","Modal","tabIndex","href","type","data-dismiss","aria-label","aria-hidden","Container","style","display","margin","title","price","description","ApiCall","menu_items","items","Math","floor","random","length","course","itemNumber","document","domain","tempMenuImage","Axios","get","then","Response","data","map","item","idx","image","random_item","splice","indexOf","split","toUpperCase","localStorage","setItem","menuType","JSON","stringify","getItem","getMenuItems","numberOfItems","path","key","src","alt","Carousel","name","data-ride","data-slide","Accordion","accordionCards","collapseID","collapseDivID","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a932770d.chunk.js","sourcesContent":["import React from 'react';\n\nclass Jumbotron extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { show: false };\n        this.showModal = this.showModal.bind(this);\n    }\n\n    showModal = () => {\n        this.setState({ show: true });\n    };\n\n    hideModal = () => {\n        this.setState({ show: false });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"jumbotron\">\n                    <h1 className=\"display-2\" id=\"Title\">TOMORROW'S</h1>\n                    <h3 className=\"lead\">WHERE TODAY'S FOOD CHANGES TOMORROW!</h3>\n                    <hr className=\"my-4\" />\n                    <p>\"BEST BURNT MUFFIN BOTTOMS THIS SIDE OF THE MISSISSIPPI\" - RANDOM DINER</p>\n                    <p className=\"lead\">\n                        <a className=\"btn btn-primary btn-lg\" onClick={this.showModal} role=\"button\">TIMES AND LOCATION</a>\n                    </p>\n\n                </div>\n\n                <Modal show={this.state.show} hideModal={this.hideModal} />\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst Modal = ({ hideModal, show }) => {\n    const showModal = show ? \"modal d-block\" : \"modal d-none\";\n\n    return (\n        <div className={`modal${showModal}`} id=\"showModal\" tabIndex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">\n                            <a href=\"https://www.google.com/maps/place/Awesome+Inc/@38.0420621,-84.4948785,17z/data=!3m1!4b1!4m5!3m4!1s0x884244e842d5acf7:0x92c7783d2b2a2d15!8m2!3d38.0420621!4d-84.4926845\">Tomorrow's 348 East Main Street</a>\n                        </h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <h5>Sunday: 10am - 1am </h5>\n                        <h5>Monday: 10am - 1am </h5>\n                        <h5>Tuesday: 10am - 1am </h5>\n                        <h5>Wednesday: 10am - 1am </h5>\n                        <h5>Thursday: 10am - 1am </h5>\n                        <h5>Friday: 10am - 2am </h5>\n                        <h5>Saturday: 10am - 2am </h5>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => hideModal()} data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\n\n\nexport default Jumbotron;","import React from 'react';\nimport { render } from \"react-dom\";\nimport { blockStatement } from '@babel/types';\nimport { NONAME } from 'dns';\nimport Tile from './Tile';\nimport ApiCall from './ApiCall'\n\n\n\nclass Container extends React.Component {\n    constructor(props){\n        super(props);\n\n    }\n    render() {\n        \n            \n        return <div\n        id='container-fluid'\n        style={{display: 'inline-block', margin: 0}}\n        className='menu-item-container-fluid'>\n            <h4>\n                Tomorrow's {this.props.title} \n            </h4>\n            <h2>\n                {this.props.price}\n            </h2>\n            <h5>\n                {this.props.description}\n            </h5>\n            \n        </div>\n    }\n}\n\n\n\n\n\nexport default Container;","import React from 'react';\nimport { render } from \"react-dom\";\nimport { blockStatement } from '@babel/types';\nimport { NONAME } from 'dns';\n\nclass Tile extends React.Component{\n   \n    render(){\n        return <button style={{\n            height: '50px',\n            width: '50px',\n            border: '1px solid black',\n            display: 'inline-block',\n            margin: 'auto',\n            }} \n            type={{\n                button: 'onclick()',\n            }}\n            class={{\n                btn: 'btn-outline-danger',\n            }}>\n\n        </button>;\n    }\n}\n\n\n\n\n\nexport default Tile;","import React from 'react';\nimport Axios from 'axios';\nimport Container from './Container'\n\nclass ApiCall extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu_items: [],\n        };\n    };\n\n    random_item(items) {\n        return items[Math.floor(Math.random() * items.length)];\n    }\n\n    getMenuItems(course, itemNumber) {\n    \n        var path = \"\";\n        var gitDomain = 'anchormansam.github.io';\n        var currentDomain = document.domain;\n        \n        if (currentDomain === gitDomain){\n            path = \"/reactrestaurant/\";\n        }\n        \n        const ONE = path + \"./images/1.jpg\";\n        const TWO = path + \"./images/2.jpg\";\n        const THREE = path + \"./images/3.jpg\";\n        const FOUR = path + \"./images/4.jpg\";\n        const FIVE = path + \"./images/5.jpg\";\n        const SIX = path + \"./images/6.jpg\";\n        const SEVEN = path + \"./images/7.jpg\";\n        const EIGHT = path + \"./images/8updated.jpg\";\n        const NINE = path + \"./images/9.jpg\";\n        const TEN = path + \"./images/10.jpg\";\n        const ELEVEN = path + \"./images/11.jpg\";\n        const TWELVE = path + \"./images/12.jpg\";\n        \n        var newImages = ['1.jpg', '2.jpg', '3.jpg', '4.jpg', '5.jpg', '6.jpg', '7.jpg', '8updated.jpg', '9.jpg', '10.jpg', '11.jpg', '12.jpg'];\n        var tempMenuImage = newImages;\n        \n\n\n\n        \n        Axios.get(`https://entree-f18.herokuapp.com/v1/menu/${itemNumber}`)\n            .then((Response) => {\n                let menu_items = Response.data.menu_items;\n\n                menu_items.map((item, idx) => {\n                   \n                    item.image = this.random_item(tempMenuImage);\n                    tempMenuImage.splice(tempMenuImage.indexOf(item.image), 1);\n                   \n\n                    item.price = `$` + item.description.length;\n                    item.title = item.description.split(' ')[1].toUpperCase();\n                });\n               \n                localStorage.setItem(this.props.menuType, JSON.stringify(menu_items));\n\n                this.setState({\n                    menu_items: menu_items\n                });\n\n            });\n    }\n    \n    componentDidMount() {\n        if (!localStorage.getItem('menu_items')){\n            \n            this.getMenuItems(this.props.menuType, this.props.numberOfItems);\n        }else {\n            this.setState({\n            });\n            \n        }\n    }\n\n    render() {\n        return (\n            this.state.menu_items.map((item, idx) => {\n                var path = `./images/${item.image}`;\n                return (\n                    <React.Fragment>\n                        <div key={idx} className={`carousel-item ${idx === 0 && 'active'}`}>\n                            <img className=\"d-block w-100\" id=\"foodImage\" src={path} alt=\"Food\" />\n\n                            <div className=\"carousel-caption d-md-block\" id=\"Priceview\">\n                              <Container \n                                    price={item.price}\n                                    title={item.title}\n                                    description={item.description}\n                                    />\n                                    </div>\n                        </div>\n                    </React.Fragment>\n                )\n            })\n        );\n    }\n}\n\nexport default ApiCall;","import React from 'react';\nimport ApiCall from './ApiCall';\n\nfunction Carousel(props) {\n  let name = `carouselExampleIndicators${props.menuType}`;\n  let id = `#${name}`;\n  return (\n    <div key={name} id={ name } className=\"carousel slide\" data-ride=\"carousel\">\n      <ol className=\"carousel-indicators\">\n      </ol>\n        <div className=\"carousel-inner\">\n          <ApiCall \n            menuType={props.menuType}\n            numberOfItems={props.numberOfItems}\n          />\n        </div>\n      <a className=\"carousel-control-prev\" href={ id } role=\"button\" data-slide=\"prev\">\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Previous</span>\n      </a>\n      <a className=\"carousel-control-next\" href={ id } role=\"button\" data-slide=\"next\">\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Next</span>\n      </a>\n    </div>\n\n  )\n};\n\nexport default Carousel; \n","import React from 'react';\nimport Carousel from './Carousel';\n\nfunction Accordion() {\n \n    const FoodTitle = [\n        {menuType: 'Appetizers', numberOfItems: 8},\n        {menuType: 'Lunch', numberOfItems: 5},  \n        {menuType: 'Brunch', numberOfItems: 8},\n        {menuType: 'Dinner', numberOfItems: 12},\n        {menuType: 'Late-Night', numberOfItems: 7},\n        // {menuType: 'Food-Images', numberOfItems: 12}\n    \n    ]\n    const accordionCards = FoodTitle.map((item, idx) => {\n        \n        var collapseID = `collapse${idx}`;\n        var collapseDivID = `#${collapseID}`;\n        return (\n            <div key={idx} className=\"card\">\n                <div className=\"card-header\" id=\"=HeadingONE\">\n                    <div key={idx} className=\"card-header\" >\n                        <h5 className=\"mb-0\">\n                            <button \n                                className=\"btn btn-link\" \n                                data-toggle=\"collapse\" \n                                data-target={collapseDivID} \n                                aria-expanded=\"true\" \n                                aria-controls={collapseID}>\n                                {item.menuType}\n                            </button>\n                        </h5>\n                    </div>\n                </div>\n\n                <div id={collapseID} className=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                        <div>\n                            <Carousel \n                                menuType = {\n                                    item.menuType\n                                }\n                                numberOfItems={\n                                    item.numberOfItems\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    });\n    \n    return (\n        <div id=\"accordion\">\n            {accordionCards}\n        </div>\n    )\n}\n\nexport default Accordion; ","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Jumbotron from './Components/Jumbotron';\nimport Accordion from './Components/Accordion.js';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n\n    <Jumbotron />\n    <Accordion />\n    \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}